@model Zeal_Institute.Models.Feedback

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<p class="text-left">
    <a href="@Url.Action("Index", "Feedbacks")" class="text-gray-700"><i class="fas fa-angle-left me-2"></i> Back to List</a>
</p>
<h4>Edit feedback</h4>

<div class="card shadow-sm table-wrapper mb-3">
    <div class="card-body">
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="col-sm-6 col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "invalid-feedback" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="mb-4">
                        @Html.LabelFor(model => model.FbEmail, "Email", htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.FbEmail, new { htmlAttributes = new { @class = "form-control", @readonly = ""} })
                        @Html.ValidationMessageFor(model => model.FbEmail, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.FbPhone, "Phone", htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.FbPhone, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                        @Html.ValidationMessageFor(model => model.FbPhone, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.FbName, "Name", htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.FbName, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                        @Html.ValidationMessageFor(model => model.FbName, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "" })
                        @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control", disabled = "" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-sm mb-2 me-2 btn-outline-success" type="submit"><i class="far fa-save me-2"></i>Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>