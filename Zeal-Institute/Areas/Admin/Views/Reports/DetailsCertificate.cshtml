@model Zeal_Institute.Models.Certificate

@{
    ViewBag.Title = "DetailsCertificate";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<p class="text-left">
    <a href="@Url.Action("ListCertificate", "Reports")" class="text-gray-700"><i class="fas fa-angle-left me-2"></i> Back to List</a>
</p>
<h4>Edit Certificate</h4>

<div class="card shadow-sm table-wrapper mb-3">
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row ">
                <div class="col-sm-6 col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "invalid-feedback" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="mb-4">
                        @Html.LabelFor(model => model.ApplicationUser.FullName, "Student", htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.ApplicationUser.FullName, new { htmlAttributes = new { @class = "form-control", disabled = ""} })
                        @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.Batch.Name, "Batch", htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Batch.Name, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
                        @Html.ValidationMessageFor(model => model.Batch.Name, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        <label>Mark</label>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Password" disabled value="@Model.Mark(Model.BatchId, Model.ApplicationUserId)">
                            <span class="input-group-text" id="basic-addon3">%</span>
                        </div>
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control", @Value = @Model.RegistrationDate.ToString("yyyy-MM-dd"), @readonly = "" } })
                        @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.ReceivedDate, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control", @Value = @Model.ReceivedDate.ToString("yyyy-MM-dd"), @readonly = "" } })
                        @Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter note", autocomplete = "off"} })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-sm mb-2 me-2 btn-outline-success" type="submit"><i class="far fa-save me-2"></i>Save</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
