@model Zeal_Institute.Models.Exam

@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int count = 0;
}

<p class="text-left">
    <a href="@Url.Action("Index", "Exams")" class="text-gray-700"><i class="fas fa-angle-left me-2"></i> Back to List</a>
</p>
<h4>
    Exam details
    <a class="btn btn-sm btn-warning float-end me-3" id="editExamDetail"><i class="fa fa-pen"></i> Edit</a>
    <a class="btn btn-sm btn-success float-end me-3 d-none" id="saveExamDetail"><i class="fa fa-save"></i> Save</a>
    <a class="btn btn-sm btn-black float-end me-3 d-none" id="cancelExamDetail"><i class="fa fa-times"></i> Cancel</a>
</h4>

<div class="card shadow-sm table-wrapper table-responsive mb-3">
    <div class="dl-horizontal">
        <div class="row m-0 py-3 px-4">
            <div class="col-sm-4 col-md-4">
                <div>
                    @Html.DisplayNameFor(model => model.Batch.Name)
                </div>

                <div>
                    @Html.DisplayFor(model => model.Batch.Name)
                </div>
            </div>
            <div class="col-sm-4 col-md-4">
                <div>
                    @Html.DisplayNameFor(model => model.DateExam)
                </div>

                <div>
                    @Html.DisplayFor(model => model.DateExam)
                </div>
            </div>
            <div class="col-sm-4 col-md-4">
                <div>
                    @Html.DisplayNameFor(model => model.StartTime)
                </div>

                <div>
                    @Model.StartTime
                </div>
            </div>
        </div>
    </div>
    <table class="display table table-flush" id="table_id">
        <thead class="thead-light">
            <tr>
                <th class="text-center">#</th>
                <th>Avatar</th>
                <th>Student</th>
                <th>Roll Number</th>
                <th>Mark</th>
                <th class="d-none"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in (List<Zeal_Institute.Models.ExamDetail>)ViewData["ListExamStudent"])
            {
                count++;
                <tr>
                    <td class="text-center">
                        @count
                    </td>
                    <td>
                        <img class="image-list-object" src="@item.ApplicationUser.Avatar" alt="avatar" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ApplicationUser.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ApplicationUser.RollNumber)
                    </td>
                    @if (item.Mark >= 40)
                    {
                        <td class="text-success mark_text">
                            @Html.DisplayFor(modelItem => item.Mark)%
                        </td>
                        <td class="text-success mark d-none">
                            <input type="number" min="0" max="100" value="@Html.DisplayFor(modelItem => item.Mark)" data-ExamId="@item.ExamId" data-ApplicationUserId="@item.ApplicationUserId" data-Note="@item.Note"/>
                        </td>
                    }
                    else
                    {
                        <td class="text-danger mark_text">
                            @Html.DisplayFor(modelItem => item.Mark)%
                        </td>
                        <td class="text-danger mark d-none">
                            <input type="number" min="0" max="100" value="@Html.DisplayFor(modelItem => item.Mark)" data-ExamId="@item.ExamId" data-ApplicationUserId="@item.ApplicationUserId" data-Note="@item.Note" />
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#editExamDetail').click(function () {
                $('#saveExamDetail').removeClass('d-none');
                $('#cancelExamDetail').removeClass('d-none');
                $('.mark_text').addClass('d-none');
                $('.mark').removeClass('d-none');
                $(this).addClass('d-none');
            });
            $('#cancelExamDetail').click(function () {
                $('#saveExamDetail').addClass('d-none');
                $('#editExamDetail').removeClass('d-none');
                $('.mark_text').removeClass('d-none');
                $('.mark').addClass('d-none');
                $(this).addClass('d-none');
            });
            $('#saveExamDetail').click(function () {
                var arrUpdate = [];
                var checkNull = true;
                var checkUndefined = true;
                $('.mark').each(function (index) {
                    var obj = {
                        ExamId: parseInt($(this).find('input').attr("data-ExamId")),
                        ApplicationUserId: $(this).find('input').attr("data-ApplicationUserId"),
                        Note: $(this).find('input').attr("data-Note")
                    };
                    var val_mark = $(this).find('input').val();
                    if (val_mark === undefined) {
                        checkUndefined = false;
                    } else if (val_mark === null) {
                        checkNull = false;
                    } else {
                        obj['Mark'] = parseFloat(val_mark);
                    }
                    arrUpdate.push(obj);
                });
                if (!checkNull) {
                    alert("Enter mark");
                    return false;
                } else {
                    if (!checkUndefined) {
                        alert("Values are greater than 0 and less than 100");
                        return false;
                    } else {
                        $.ajax({
                            url: "/Admin/Exams/UpdateExamDetails",
                            method: "POST",
                            dataType: "json",
                            traditional: true,
                            data: { dataExam: JSON.stringify(arrUpdate) },
                            success: function (result, status, xhr) {
                                if (result) {
                                    alert("Update Success");
                                    $('#saveExamDetail').addClass('d-none');
                                    $('#cancelExamDetail').addClass('d-none');
                                    $('.mark_text').removeClass('d-none');
                                    $('.mark').addClass('d-none');
                                    $('#editExamDetail').removeClass('d-none');
                                } else {
                                    alert("Update Fail");
                                }
                            }
                        });
                    }
                }
            });
        });
    </script>
}
